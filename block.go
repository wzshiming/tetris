package tetris

type Block uint16

func (b Block) On(x, y int) int {
	if x > 3 || y > 3 || x < 0 || y < 0 {
		return 0
	}
	off := 4*(3-y) + (3 - x)
	if b&(1<<uint(off)) != 0 {
		return 1
	}
	return 0
}

var BlocksPool = [...][]Block{
	[]Block{
		// 0 0 1 0
		// 0 0 1 0
		// 0 0 1 0
		// 0 0 1 0
		0x2222,

		// 0 0 0 0
		// 0 0 0 0
		// 1 1 1 1
		// 0 0 0 0
		0x00f0,
	},

	[]Block{
		// 0 0 0 0
		// 0 0 1 0
		// 0 1 1 0
		// 0 0 1 0
		0x0262,

		// 0 0 0 0
		// 0 0 1 0
		// 0 1 1 1
		// 0 0 0 0
		0x0270,

		// 0 0 0 0
		// 0 0 1 0
		// 0 0 1 1
		// 0 0 1 0
		0x0232,

		// 0 0 0 0
		// 0 0 0 0
		// 0 1 1 1
		// 0 0 1 0
		0x0072,
	},

	[]Block{
		// 0 0 0 0
		// 0 1 1 0
		// 0 0 1 0
		// 0 0 1 0
		0x0622,

		// 0 0 0 0
		// 0 0 1 0
		// 1 1 1 0
		// 0 0 0 0
		0x02e0,

		// 0 1 0 0
		// 0 1 0 0
		// 0 1 1 0
		// 0 0 0 0
		0x4460,

		// 0 0 0 0
		// 0 1 1 1
		// 0 1 0 0
		// 0 0 0 0
		0x0740,
	},

	[]Block{

		// 0 0 0 0
		// 1 1 1 0
		// 0 0 1 0
		// 0 0 0 0
		0x0e20,

		// 0 0 1 0
		// 0 0 1 0
		// 0 1 1 0
		// 0 0 0 0
		0x2260,

		// 0 0 0 0
		// 0 1 0 0
		// 0 1 1 1
		// 0 0 0 0
		0x0470,

		// 0 0 0 0
		// 0 1 1 0
		// 0 1 0 0
		// 0 1 0 0
		0x0644,
	},

	[]Block{
		// 0 0 0 0
		// 0 1 0 0
		// 0 1 1 0
		// 0 0 1 0
		0x0462,

		// 0 0 0 0
		// 0 0 1 1
		// 0 1 1 0
		// 0 0 0 0
		0x0360,
	},

	[]Block{
		// 0 0 0 0
		// 0 0 1 0
		// 0 1 1 0
		// 0 1 0 0
		0x0264,

		// 0 0 0 0
		// 0 1 1 0
		// 0 0 1 1
		// 0 0 0 0
		0x0630,
	},

	[]Block{
		// 0 0 0 0
		// 0 1 1 0
		// 0 1 1 0
		// 0 0 0 0
		0x0660,
	},
}
